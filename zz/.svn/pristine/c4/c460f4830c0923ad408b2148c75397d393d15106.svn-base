package com.bizdata.zz.project.projectSourceEdit.controller;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.ServletRequestDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.bizdata.commons.utils.DateEditor;
import com.bizdata.commons.utils.JqGridPageVO;
import com.bizdata.commons.utils.JqGridPageVO2JpaPageParamVO;
import com.bizdata.commons.utils.JqGridSortVO;
import com.bizdata.commons.utils.JqGridSortVO2JpaSortParamVO;
import com.bizdata.config.FileUploadConfig;
import com.bizdata.zz.project.projectSourceEdit.controller.vo.ProjectSourceEditSearchVO;
import com.bizdata.zz.project.projectSourceEdit.domain.ProjectSourceEdit;
import com.bizdata.zz.project.projectSourceEdit.service.ProjectSourceEditService;

import me.sdevil507.resp.ResultUtil;
import me.sdevil507.resp.ResultVO;
import me.sdevil507.vo.JpaPageParamVO;
import me.sdevil507.vo.JpaPageResultVO;
import me.sdevil507.vo.JpaSortParamVO;

@Controller
@RequestMapping("/admin/product_source_edit")
public class ProjectSourceEditController {
	
	  @InitBinder
	    protected void initBinder(HttpServletRequest request,
	                              ServletRequestDataBinder binder) throws Exception {
	        //对于需要转换为Date类型的属性，使用DateEditor进行处理
	        binder.registerCustomEditor(Date.class, new DateEditor());
	    }

	    private final ProjectSourceEditService projectSourceEditService;

	    private final JqGridPageVO2JpaPageParamVO jqGridPageVO2JpaPageParamVO;

	    private final JqGridSortVO2JpaSortParamVO jqGridSortVO2JpaSortParamVO;

	    private final FileUploadConfig fileUploadConfig;

	    @Autowired
	    public ProjectSourceEditController(ProjectSourceEditService projectSourceEditService, JqGridPageVO2JpaPageParamVO jqGridPageVO2JpaPageParamVO, JqGridSortVO2JpaSortParamVO jqGridSortVO2JpaSortParamVO, FileUploadConfig fileUploadConfig) {
	        this.projectSourceEditService = projectSourceEditService;
	        this.jqGridPageVO2JpaPageParamVO = jqGridPageVO2JpaPageParamVO;
	        this.jqGridSortVO2JpaSortParamVO = jqGridSortVO2JpaSortParamVO;
	        this.fileUploadConfig = fileUploadConfig;
	    }

	    /**
	     * 展示对应模板页面
	     *
	     * @return 模板页面
	     */
	    @RequiresPermissions("product_source:view")
	    @RequestMapping(method = RequestMethod.GET)
	    public ModelAndView view() {
	        return new ModelAndView("zz/project/projectSourceEdit/list");
	    }

	    /**
	     * 展示列表数据
	     *
	     * @param jqGridPageVO   分页VO
	     * @param jqGridSortVO   排序VO
	     * @param bannerSearchVO banner搜索参数
	     * @return 结果list
	     */
	    @RequestMapping(value = "/list", method = RequestMethod.GET)
	    @ResponseBody
	    public JpaPageResultVO list(JqGridPageVO jqGridPageVO, JqGridSortVO jqGridSortVO, ProjectSourceEditSearchVO projectSourceEditSearchVO) {
	        JpaPageParamVO jpaPageParamVO = jqGridPageVO2JpaPageParamVO.convert(jqGridPageVO);
	        JpaSortParamVO jpaSortParamVO = jqGridSortVO2JpaSortParamVO.convert(jqGridSortVO);
	        Page<ProjectSourceEdit> banners = projectSourceEditService.findAllByPage(jpaPageParamVO, jpaSortParamVO, projectSourceEditSearchVO);
	       /* for (Banner banner : banners) {
	            banner.setPicUrl(fileUploadConfig.getServerPrefix() + banner.getPicUrl());
	        }*/
	        return new JpaPageResultVO<>(banners, ProjectSourceEdit.class);
	    }


	    /**
	     * 跳转至新增页面
	     *
	     * @return 模板页面
	     */
	    @RequestMapping(value = "/add_view", method = RequestMethod.GET)
	    public ModelAndView addView() {
	        return new ModelAndView("zz/project/projectSourceEdit/add");
	    }

	    /**
	     * 根据ID跳转至编辑页面
	     *
	     * @param id id
	     * @return 模板页面
	     */
	    @RequestMapping(value = "/edit_view", method = RequestMethod.GET)
	    public ModelAndView editView(String id) {
	        System.out.println(id);
	        ProjectSourceEdit projectSourceEdit = projectSourceEditService.findOne(id);
	       // projectSourceEdit.setPicUrl(fileUploadConfig.getServerPrefix() + projectSourceEdit.getPicUrl());
	        return new ModelAndView("zz/project/projectSourceEdit/edit", "banner", projectSourceEdit);
	    }

	    /**
	     * Banner新增或修改
	     *
	     * @param banner 实体
	     * @return 执行反馈
	     */
	    @RequestMapping(value = "/saveOrUpdate", method = RequestMethod.POST)
	    @ResponseBody
	    public ResultVO saveOrUpdate(ProjectSourceEdit banner) {
	        ResultVO resultVO;
	        if (projectSourceEditService.save(banner)) {
	            resultVO = ResultUtil.create(0, "保存成功!");
	        } else {
	            resultVO = ResultUtil.create(-1, "保存失败!");
	        }
	        return resultVO;
	    }

	    /**
	     * 根据ID删除某条Banner
	     *
	     * @param id id
	     * @return 执行反馈
	     */
	    @RequestMapping(value = "/del", method = RequestMethod.POST)
	    @ResponseBody
	    public ResultVO del(String id) {
	        ResultVO resultVO;
	        if (projectSourceEditService.delete(id)) {
	            resultVO = ResultUtil.create(0, "删除成功!");
	        } else {
	            resultVO = ResultUtil.create(-1, "删除失败!");
	        }
	        return resultVO;
	    }
}
